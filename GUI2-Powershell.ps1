Using Namespace System;
Using Namespace System.Collections;
Using NameSpace System.ComponentModel;
Using Namespace System.Data;
Using Namespace System.Drawing;
Using Namespace System.Linq;
Using Namespace System.Runtime.InteropServices;
Using Namespace System.Text;
Using Namespace System.Windows;
Using Namespace System.Windows.Interactivity;
using Namespace System.Windows.Controls;
using NameSpace System.Windows.Input;
Using Namespace System.Windows.Forms;
Using Namespace PresentationCore;
Using Namespace PresentationFramework;

	# Add assemblies for use in PS Console 
	Add-Type -AssemblyName System.Drawing, PresentationCore,PresentationFramework,WindowsBase,System.Windows.Forms

	$global:GUI_Deafult_Margin = "10"
	
	$global:GUI_Button_BackColor = "#ffa32a40"
	$global:GUI_Button_TextColor = "White"
	
	$global:GUI_Label_BackColor = "Transparent"
	$global:GUI_Label_TextColor = "White"
	
	$global:GUI_Button_Height = "30"
	$global:GUI_Button_FontSize = "16"
	$global:GUI_Button_FontWeight = "Normal"
	$global:GUI_Button_Highlight_FontWeight = "Bold"
	$global:GUI_Button_Border = "1"
	
	$GUI_FormBackColor  = "#FF2A2B2F"

	$global:GUI_MouseDownFlag = $false
	$global:GUI_DragStart = New-Object System.Drawing.Point(0,0)
	
	
	# https://learn.microsoft.com/en-us/windows/uwp/xaml-platform/
	
	$XAML_Schemas = 'xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" '
	
	#$XAML_Schemas_VisualStudio = 'xmlns:d="http://schemas.microsoft.com/expression/blend/2008"' #The "d:" XAML namespace is intended for designer support
	
	#" mc:" indicates and supports a markup compatibility mode for reading XAML.
	# This technique enables run-time XAML parsers to ignore the design attributes in "d:".
	# xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
    

add-type -typeDefinition '

using System;
using System.Runtime.InteropServices;

public class Shell32_Extract {

  [DllImport(
     "Shell32.dll",
      EntryPoint        = "ExtractIconExW",
      CharSet           =  CharSet.Unicode,
      ExactSpelling     =  true,
      CallingConvention =  CallingConvention.StdCall)
  ]

   public static extern int ExtractIconEx(
      string lpszFile          , // Name of the .exe or .dll that contains the icon
      int    iconIndex         , // zero based index of first icon to extract. If iconIndex == 0 and and phiconSmall == null and phiconSmall = null, the number of icons is returnd
      out    IntPtr phiconLarge,
      out    IntPtr phiconSmall,
      int    nIcons
  );

}
';
#
Add-Type -TypeDefinition @"

// "
using System;
using System.Windows.Forms;
public class Win32Window : IWin32Window
{
    private IntPtr _hWnd;
    private int _data;

    public int Data
    {
        get { return _data; }
        set { _data = value; }
    }

    public Win32Window(IntPtr handle)
    {
        _hWnd = handle;
    }

    public IntPtr Handle
    {
        get { return _hWnd; }
    }
}

"@ -ReferencedAssemblies 'System.Windows.Forms.dll'

# http://www.codeproject.com/Tips/816113/Console-Monitor
Add-Type -TypeDefinition @"
// "
using System;
using System.Drawing;
using System.IO;
using System.Windows.Forms;
using System.Drawing.Imaging;
public class WindowHelper
{
    private int _count = 0;
    public int Count
    {
        get { return _count; }
        set { _count = value; }
    }
   public String TakeScreenshot()
    {
        Bitmap bmp = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height);
        Graphics gr = Graphics.FromImage(bmp);
        gr.CopyFromScreen(0, 0, 0, 0, bmp.Size);
        string str = string.Format(@"C:\temp\Snap[{0}].jpeg", _count);
        bmp.Save(str, ImageFormat.Jpeg);
        bmp.Dispose();
        gr.Dispose();
        return str;
    }
    public WindowHelper()
    {
    }

}

"@ -ReferencedAssemblies 'System.Windows.Forms.dll','System.Drawing.dll','System.Data.dll'

# $owner = New-Object Win32Window -ArgumentList ([System.Diagnostics.Process]::GetCurrentProcess().MainWindowHandle)
#  $owner.count = $iteration
#  $owner.Screenshot()

Add-Type -Name Window -Namespace Console -MemberDefinition @"
// "
[DllImport("Kernel32.dll")]
public static extern IntPtr GetConsoleWindow();
 
[DllImport("user32.dll")]
[return: MarshalAs(UnmanagedType.Bool)]
public static extern bool ShowWindow(IntPtr hWnd, Int32 nCmdShow);
"@

function GUI_TESTING_Show_Console {
   $consolePtr = [Console.Window]::GetConsoleWindow()
  #5 show
 [Console.Window]::ShowWindow($consolePtr, 5)
}
 
function GUI_TESTING_Hide_Console {
    $consolePtr = [Console.Window]::GetConsoleWindow()
  #0 hide
 [Console.Window]::ShowWindow($consolePtr, 0)
}


# A Base64 Image String
$Image_Exclamation = @' 

'@

	#Setup Powershell IDE 
	
	# ContentBackground
        $ContentBackground = 'ContentBackground'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $RuntimeParameterDictionary = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary
        $arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.ContentBackground = "$GUI_FormBackColor"
        
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ContentBackground, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($ContentBackground, $RuntimeParameter)
        

        # FontFamily
        $FontFamily = 'FontFamily'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute)  
        
		$arrSet = [System.Drawing.FontFamily]::Families.Name | Select-Object -Skip 1 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
        $AttributeCollection.Add($ValidateSetAttribute)
		$PSBoundParameters.FontFamily = "Segoe UI"
		
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($FontFamily, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($FontFamily, $RuntimeParameter)
        

        # TitleFontWeight
        $TitleFontWeight = 'TitleFontWeight'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = [System.Windows.FontWeights] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.TitleFontWeight = "Normal"
        
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($TitleFontWeight, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($TitleFontWeight, $RuntimeParameter)

        # ContentFontWeight
        $ContentFontWeight = 'ContentFontWeight'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = [System.Windows.FontWeights] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.ContentFontWeight = "Normal"
        
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ContentFontWeight, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($ContentFontWeight, $RuntimeParameter)
        

        # ContentTextForeground
        $ContentTextForeground = 'ContentTextForeground'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.ContentTextForeground = "White"
        
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ContentTextForeground, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($ContentTextForeground, $RuntimeParameter)

        # TitleTextForeground
        $TitleTextForeground = 'TitleTextForeground'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.TitleTextForeground = "White"
        
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($TitleTextForeground, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($TitleTextForeground, $RuntimeParameter)

        # BorderBrush
        $BorderBrush = 'BorderBrush'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.BorderBrush = "Black"
        $RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($BorderBrush, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($BorderBrush, $RuntimeParameter)


        # TitleBackground
        $TitleBackground = 'TitleBackground'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.TitleBackground = "Black"
        
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($TitleBackground, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($TitleBackground, $RuntimeParameter)

        # ButtonTextForeground
        $ButtonTextForeground = 'ButtonTextForeground'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.ButtonTextForeground = "White"
        
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ButtonTextForeground, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($ButtonTextForeground, $RuntimeParameter)

		# LabelTextForeground
        $LabelTextForeground = 'LabelTextForeground'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name 
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $PSBoundParameters.LabelTextForeground = "White"
        
		$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ButtonTextForeground, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($LabelTextForeground, $RuntimeParameter)
		
        <# Sound
        $Sound = 'Sound'
        $AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
        $ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
        $ParameterAttribute.Mandatory = $False
        #$ParameterAttribute.Position = 14
        $AttributeCollection.Add($ParameterAttribute) 
        $arrSet = (Get-ChildItem "$env:SystemDrive\Windows\Media" -Filter Windows* | Select -ExpandProperty Name).Replace('.wav','')
        $ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)    
        $AttributeCollection.Add($ValidateSetAttribute)
        $RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($Sound, [string], $AttributeCollection)
        $RuntimeParameterDictionary.Add($Sound, $RuntimeParameter)
		#>
		
		[int]$ContentFontSize = 14
        [int]$TitleFontSize = 14
        [int]$BorderThickness = 0
        [int]$CornerRadius = 4
        [int]$ShadowDepth = 3
        [int]$BlurRadius = 20

# CenterOwner, CenterScreen

# XAML is a markup language. The common language runtime (CLR), as implied by its name, enables runtime execution.

[string]$XAML_Form = @"
<Window $XAML_Schemas 
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
	x:Name="Form" Title="" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize" AllowsTransparency="True" Background="Transparent" Opacity="1" Topmost = "True">
	<Window.Resources>
		<Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		<SolidColorBrush x:Key="Button.Static.Background" Color="$global:GUI_Button_BackColor"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
		    <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="$CornerRadius" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="0,0,0,0">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EAB01E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#EAB01E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#F1CA68"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#F1CA68"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
						</ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		<Style TargetType="{x:Type Label}">
		    <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border CornerRadius="$CornerRadius" BorderThickness="1" Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		<Style x:Key="addTitle" TargetType="{x:Type Label}">
		    <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border CornerRadius="$CornerRadius,$CornerRadius,0,0" BorderThickness="0" Background="{TemplateBinding Background}">
							<ContentPresenter VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
		</Style>		
    </Window.Resources>
	<Border x:Name="MainBorder" Margin="$global:GUI_Deafult_Margin" CornerRadius="$CornerRadius" BorderThickness="$BorderThickness" BorderBrush="$($PSBoundParameters.BorderBrush)" Padding="0" >
        <Border.Effect>
            <DropShadowEffect x:Name="DSE" Color="Black" Direction="270" BlurRadius="$BlurRadius" ShadowDepth="$ShadowDepth" Opacity="0.6" />
        </Border.Effect>
        <Border.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="ShadowDepth" From="0" To="$ShadowDepth" Duration="0:0:1" AutoReverse="False" />
                        <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius" From="0" To="$BlurRadius" Duration="0:0:1" AutoReverse="False" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Border.Triggers>
		<Grid>
			<Border Name="Mask" CornerRadius="$CornerRadius" Background="$($PSBoundParameters.ContentBackground)" />
            <Grid x:Name="Grid" Background="$($PSBoundParameters.ContentBackground)">
                <Grid.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=Mask}"/>
                </Grid.OpacityMask>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
                <StackPanel Name="ContentPanel" Orientation="Vertical">
					<DockPanel Name="addTitle" HorizontalAlignment="Stretch" ></DockPanel>
				    <DockPanel Name="addContent" HorizontalAlignment="Center" LastChildFill="False"></DockPanel>
					<DockPanel Name="addFooter" HorizontalAlignment="Center" LastChildFill="False"></DockPanel>
                    <DockPanel Name="addButton" HorizontalAlignment="Center" LastChildFill="False"></DockPanel>
                </StackPanel>
            </Grid>
		</Grid>
	</Border>
</Window>
"@

[XML]$XAML_Button = @"
<Button $XAML_Schemas Name="Button" Width="Auto" Height="$global:GUI_Button_Height" FontFamily="$($PSBoundParameters.FontFamily)" FontSize="$global:GUI_Button_FontSize" Background="$global:GUI_Button_BackColor" Foreground="$global:GUI_Button_TextColor" BorderThickness="0" Margin="$global:GUI_Deafult_Margin" Padding="2,2,2,2" Cursor="Hand" />
"@

[XML]$XAML_TextBlock = @"
<TextBlock $XAML_Schemas Name="TextBlock" FontFamily="$($PSBoundParameters.FontFamily)" Background="Transparent" Foreground="$($PSBoundParameters.ContentTextForeground)" Padding="20,5,20,5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
"@

[XML]$XAML_TextBox = @"
<TextBox $XAML_Schemas Name="TextBox" AcceptsReturn="True" Background="Transparent" TextWrapping="Wrap" SpellCheck.IsEnabled="True" Language="en-US" />
"@

[XML]$XAML_Label = @"
<Label $XAML_Schemas Name="Label" IsHitTestVisible="False" Padding="2" FontFamily="$($PSBoundParameters.FontFamily)" FontSize="$TitleFontSize" FontWeight="$($PSBoundParameters.TitleFontWeight)" Background="Transparent" Foreground="$($PSBoundParameters.LabelTextForeground)" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" HorizontalContentAlignment="Center" BorderThickness="0"/>
"@

[XML]$XAML_Title = @"
<Label $XAML_Schemas Name="TitleLabel" Style="{DynamicResource addTitle}" IsHitTestVisible="False" Padding="2" FontFamily="$($PSBoundParameters.FontFamily)" FontSize="$TitleFontSize" FontWeight="$($PSBoundParameters.TitleFontWeight)" Background="Transparent" Foreground="$($PSBoundParameters.LabelTextForeground)" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" HorizontalContentAlignment="Center" BorderThickness="0"/>
"@

[XML]$XAML_ComboBox = @"
<StackPanel Orientation="Vertical">
<ComboBox $XAML_Schemas Name="ComboBox" FontFamily="$($PSBoundParameters.FontFamily)" FontSize="$TitleFontSize" Foreground="$($PSBoundParameters.TitleTextForeground)" FontWeight="$($PSBoundParameters.TitleFontWeight)" Background="$($PSBoundParameters.TitleBackground)" ItemsSource="{Binding MyItems, ElementName=RootNodeLol}" SelectedItem="{Binding MySelectedItem, ElementName=RootNodeLol}" />
</StackPanel>
"@

[XML]$XAML_Image = @"
<Image $XAML_Schemas Name="Image" HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Margin="$global:GUI_Deafult_Margin" />
"@

function DecodeBase64Image {
    param (
        [Parameter(Mandatory=$true)]   [String]$ImageBase64,
		[Parameter(Mandatory=$false)]  [String]$NewColor
    )
	
    $ObjBitmapImage = New-Object System.Windows.Media.Imaging.BitmapImage 
    $ObjBitmapImage.BeginInit() 
    $ObjBitmapImage.StreamSource = [System.IO.MemoryStream][System.Convert]::FromBase64String($ImageBase64) 
    $ObjBitmapImage.EndInit() 
    $ObjBitmapImage.Freeze()
	
	$colormap = New-Object System.Drawing.Imaging.ColorMap 
	$attributes = New-Object System.Drawing.Imaging.ImageAttributes 
	$rectangle = New-Object System.Drawing.Rectangle(0, 0, $ObjBitmapImage.Width, $ObjBitmapImage.Height)
	
	if($NewColor) {
		<# Recolor the Image?
		$bmp = [System.Drawing.Bitmap] [System.Drawing.Image]::FromStream($ObjBitmapImage.StreamSource) 
		$colormap.OldColor = "#444444" 
		$colormap.NewColor = $NewColor
		$attributes.SetRemapTable($colormap) 
		$graphics = [System.Drawing.Graphics]::FromImage($bmp) 
		$graphics.DrawImage($bmp, $rectangle, 0, 0, $rectangle.Width, $rectangle.Height, "Pixel", $attributes)
		$graphics.Dispose()
		#>
	}
    $ObjBitmapImage
}


<#
.Synopsis
   Get a Form or Window Object using its Name, Variable, or using another Object.
.DESCRIPTION
   Returns a Windows Form Object
.EXAMPLE
   GUI-GetFormObject -Name "Main" 
.EXAMPLE
   GUI-GetFormObject -AnObject $TextBox1
.EXAMPLE
   GUI-GetFormObject -VarName $UserName
#>
Function GUI2-GetFormObject() {
	[Alias()]
	[OutputType([System.Object])]
	param(
        [Parameter(Mandatory=$false)]        [String] $Name,
		[Parameter(Mandatory=$false)]        [String] $VarName,
		[Parameter(Mandatory=$false)] [System.Object] $AnObject
		)
		
		[System.Object]$return = $null
		
		if($Name) {
			
			$FindForm = (Get-variable | Where-Object {$_.value -is [Windows.Forms.Form]})
			if(-not $FindForm) {
				$FindForm = (Get-variable | Where-Object {$_.value -is [System.Windows.Window]})
			}
			
			if($FindForm) {
				Foreach ($x in $FindForm.Name){
					$r = (Get-Variable -Name $x -ValueOnly)
					if($r.Name -eq $Name) {
						[System.Object]$return = $r
						break
					}
				}
			}

		} else {
			
			if($AnObject) {
				$parent = $AnObject
				do {
					$parent = $parent.parent
				} while ($parent.GetType().BaseType.toString() -ne 'System.Windows.Controls.ContentControl');
				[System.Object]$return = $parent
			}
			
			if($VarName) {
				$FindVar = Get-Variable | where {$_.Name -eq "$($VarName)"}
				if($FindVar) {
					[System.Object]$return = (Get-Variable -Name "$($VarName)" -ValueOnly)
				} else {
					[System.Object]$return = $null
				}
			}
		}
		
	return [System.Object]$return
}


Function GUI2-Add-Button {
        Param($Content, $Form, [switch] $CloseForm, $Name, $Height, $Width, [switch] $Center, [switch] $Left, [switch] $Right)
        
		$Button = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $XAML_Button))
        $ButtonText = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $XAML_TextBlock))
		
		if($Content) {$ButtonText.Text = "$Content"	} 
		
		$ButtonText.ForeGround = $global:GUI_Button_TextColor
		$ButtonText.Background = "Transparent"
        $Button.Content = $ButtonText
		$Button.BorderBrush="#FFF"
		
		$Button.Name = "btn_$($Name)"
		
		if($Width) {
			$Button.Width = $Width
		}
		if($Height) {
			$Button.Height = $Height
		} else {
			$Button.Height = $global:GUI_Button_Height
		}
		
		
        $Button.Add_MouseEnter({
			$fontSize = $this.FontSize
            $This.Content.FontSize = $fontSize + 1
			$This.Content.FontWeight = $global:GUI_Button_Highlight_FontWeight
        })
        $Button.Add_MouseLeave({
			$fontSize = $this.FontSize
            $This.Content.FontSize = $fontSize - 1
			$This.Content.FontWeight = $global:GUI_Button_FontWeight
        })
		
		
		if($CloseForm.isPresent) {
        $Button.Add_Click({
            $parent = $this
			do {
				$parent = $parent.parent
			} while ($parent.GetType().BaseType.toString() -ne 'System.Windows.Controls.ContentControl');
			$parent.Close()
        })
		}

		$NewContent = $Form.FindName("addButton")   
		
		if($Right.isPresent) {
			$NewContent.HorizontalAlignment ="Right" #Update the Dock Instead of the new Button
		}
		if($Left.isPresent) {
			$NewContent.HorizontalAlignment ="Left" #Update the Dock Instead of the new Button
		}
		if($Center.isPresent) {
			$NewContent.HorizontalAlignment ="Center" #Update the Dock Instead of the new Button
		}
		
		$NewContent.Children.Add($Button)
        #$Form.FindName('addButton').AddChild($Button)
		return $Button
    }
	
Function GUI2-ExtractIcon($File, $index) {
	
	# https://renenyffenegger.ch/development/Windows/PowerShell/examples/WinAPI/ExtractIconEx/shell32.html
	# https://renenyffenegger.ch/development/Windows/PowerShell/examples/WinAPI/ExtractIconEx/imageres.html
	
	[System.IntPtr] $phiconSmall = 0
	[System.IntPtr] $phiconLarge = 0
	
	$bmpLarge = $null
	
	if($index) {
		
		try {
			$nofIconsExtracted = [Shell32_Extract]::ExtractIconEx($File, $index, [ref] $phiconLarge, [ref] $phiconSmall, 1)
		} catch {}
		
		if($nofIconsExtracted -eq 2) {
			#$iconSmall = [System.Drawing.Icon]::FromHandle($phiconSmall);
			$iconLarge = [System.Drawing.Icon]::FromHandle($phiconLarge);
			$bmpLarge = $iconLarge.ToBitmap()
		}
		
	} else {
		
		# Extract the Icon from the actual File with out an index.
		try {
			$iconLarge = [System.Drawing.Icon]::ExtractAssociatedIcon($Path)
			$bmpLarge = $iconLarge.ToBitmap()
		} catch {}
		
	}
	
	# Convert the Icon Bitmap file into a Media PNG Image 
	if($bmplarge) {
		$memory = New-Object System.IO.MemoryStream
		$null = $bmpLarge.Save($memory, [System.Drawing.Imaging.ImageFormat]::Png)   #Bmp, emf, Exif, Gif, Heif, Icon, Jpeg, Png, Tiff, Webp, Wmf
		$memory.Position = 0
	
		$img = New-Object System.Windows.Media.Imaging.BitmapImage
		$img.BeginInit()
		$img.StreamSource = $memory
		$img.CacheOption = [System.Windows.Media.Imaging.BitmapCacheOption]::OnLoad
		$img.EndInit()
		$img.Freeze()
		$memory.Close()

		return $img
	
	}
	
	return $null
}

Function GUI2-Add-Image($Form, $Name, $Width , $Height, $ImageBase64 , [switch]$Information, $File, $Index, $Tooltip) {

	$Image = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $XAML_Image))
	
	if ($ImageBase64) {
		$Image.Source = DecodeBase64Image -ImageBase64 $ImageBase64
	}
	
	$defaultFile = "$env:SystemRoot\system32\imageres.dll"
	if($File) { $defaultFile = $File}
	
	$ExtractIcon = $False
	if($Information.isPresent) { $ExtractIndex = 79	}
	if($Question.isPresent) { $ExtractIndex = 94 }

	if($ExtractIndex -ne $False) {
		$Image.Source = GUI2-ExtractIcon -File "$env:SystemRoot\system32\imageres.dll" -index $ExtractIndex
	} else {
		if($Index) {
			$Image.Source = GUI2-ExtractIcon -File "$($defaultFile)" -index $Index
		} else {
			if($File) {
				$Image.Source = GUI2-ExtractIcon -File "$($File)"
			}
		}
	}
	
	if($Width) {$Image.Width = $Width}
	if($Height) {$Image.Height = $Height}
	if($Tooltip) {$Image.Tooltip = $Tooltip}
	
	$NewContent = $Form.FindName("addContent")
	$NewContent.Children.Add($Image)
	return $Image
}

Function GUI2-Add-Label {
        Param($Content, $Form, $Name, $FontSize, $FontWeight, $ForeGround, $BackGround , [switch]$Title, [switch] $Multiline,  $MaxWidth, $TextAlignment, [switch] $RoundedTop)
        
		if ($Title.isPresent) {
			$Label = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $XAML_Title))
		} else {
			$Label = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $XAML_Label))
		}
		$LabelTextBlock = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $XAML_TextBlock))
        
		$LabelTextBlock.Text = "$Content"
		if($ForeGround) { $LabelTextBlock.ForeGround = $ForeGround }
		
		$LabelTextBlock.Foreground = $global:GUI_Label_TextColor
		
		$Label.BorderBrush="#FFF"
		$Label.Name = $Name
		if($FontSize) {$Label.Fontsize = $FontSize }
		if($FontWeight) { $Label.FontWeight = $FontWeight }
		if($BackGround) { $Label.BackGround = $BackGround }
		if($MaxWidth) { $Label.MaxWidth = $MaxWidth }
		if($TextAlignment) { $LabelTextBlock.TextAlignment = $TextAlignment }
		
		if($Multiline.isPresent) {
			$LabelTextBlock.TextWrapping="Wrap"
		}
			
		$Label.Content = $LabelTextBlock
		
		if ($Title.isPresent) {
			$NewContent = $Form.FindName("addTitle")
		} elseif ($Footer.isPresent) {
			$NewContent = $Form.FindName("addFooter")
		} else {
			$NewContent = $Form.FindName("addContent")
		}
		
		$NewContent.Children.Add($Label)  #$Form.FindName('addContent').AddChild($Label)
		return $Label
    }

Function GUI2-MouseMoveWindow {
        Param($Object)
    if($Object) {
        $MouseDown = {
			if($global:GUI_MouseDownFlag -eq $False) {
				$global:GUI_MouseDownFlag = $True;
				$global:GUI_DragStart = [System.Windows.Forms.Control]::MousePosition;
			}
		}
		
		$MouseUp = {
			$global:GUI_MouseDownFlag = $false;
		}
		
		$MouseMove = {
			if($global:GUI_MouseDownFlag -eq $True) {
						
				if($this) {
					$DragFinish = [System.Windows.Forms.Control]::MousePosition;
					$DX =  $DragFinish.X - $global:GUI_DragStart.X;
					$DY =  $DragFinish.Y - $global:GUI_DragStart.Y;
					$this.left = $this.left + $DX;
					$this.top = $this.top + $DY;
					$global:GUI_DragStart = $DragFinish;
				}
			}
		}
		
		[void]$Object.add_MouseMove($MouseMove) 	#Occurs when the mouse pointer moves while over this element.
		[void]$Object.add_MouseDown($MouseDown)		#Occurs when any mouse button is pressed while the pointer is over this element.
		[void]$Object.add_MouseUp($MouseUp)			#Occurs when any mouse button is released over this element.
		[void]$Object.add_MouseLeave($MouseUp)   	#Occurs when the mouse pointer leaves the bounds of this element
		#[void]$Object.add_MouseEnter($MouseEnter) 	#Occurs when the mouse pointer enters the bounds of this element
		#[void]$Object.add_MouseWheel($MouseWheel) 	#Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.
    }

    return $Object

}


Function GUI2-Create-Form {
        Param($Name, $Title, [switch] $MouseMoveForm )
		
	$reader = [XML.XMLReader]::Create([IO.StringReader]$XAML_Form)
	$result = [Windows.Markup.XAMLReader]::Load($reader)

	if($MouseMoveForm.isPresent) {
		$result = GUI2-MouseMoveWindow $result
	}	

    $result.Name = "win_$($Name)"

	return $result
}		


#Remove unusable prefixes and elements from our xaml string
#$XAML = $XAML -replace 'mc:Ignorable="d"','' -replace 'x:N','N' -replace '^<Win.*', '<Window'

#Convert our modified xml string into an XML Powershell object
#$reader = [XML.XMLReader]::Create([IO.StringReader]$XAML_Form)
#$result = [Windows.Markup.XAMLReader]::Load($reader)
	
#$Form = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $XAML))

#Create properties for each named object in the XAML object dynamically
#    (((Select-Xml -Xml ([xml]$XAML) -XPath / ).Node).SelectNodes('//*[@Name]')).Name | % { 
#        $result | Add-Member -MemberType NoteProperty -Name $_ -Value $result.FindName($_) -Force 
#    }

#$MyDynamicControls = $result.FindName("addContent")
#$Label = New-Object System.Windows.Controls.Label
#$Label.Name = "Mylabel"
#$Label.Content="PowerShell and WPF"
#$Label.ForeGround="Red"
#$Label.FontSize="20"
#$Label.FontWeight="Bold"
#$MyDynamicControls.Children.Add($Label)

#$Form = $result


<#  XAML Elements Naming Conventions
AccessText – at
Border – brd
BulletDecorator – bd
Button – btn
Calendar – cal
Canvas – cnv
CheckBox – chk
ComboBox – cbo
ContextMenu – ctx
DataGrid – dg
DatePicker – dat
DockPanel – dp
Expander – exp
Frame – fr
Grid – grd
GridSplitter – gsp
GroupBox – grp
Hyperlink – hyp
Image – img
InkCanvas – ikc
InkPresenter – ikp
Label – lbl
ListBox – lb
ListView – lv
MediaElement – me
Menu – mnu
NavigationWindow – nw
Page – pg
Panel – pnl
PasswordBox – pwd
Popup – pop
ProgressBar – pb
RadioButton – rdo
ResizeGrip – rgr
RepeatButton – rpt
RichTextBox – rtb
ScrollBar – sb
ScrollViewer – sv
Separator – sep
Slider – sli
StackPanel – sp
StatusBar – stb
TabControl – tab
TabItem – tbi
TextBlock – tb
TextBox – txt
Thumb – th
ToolBar – tbr
ToolTip – tt
TreeView – tv
Viewbox – vb
VirtualizingStackPanel – vsp
Window – win
WrapPanel – wp
#>




$Form = GUI2-Create-Form -Name "Wow" -MouseMoveForm

$Label1 = GUI2-Add-Label -Title -Content "Heading Message" -FontSize "16" -FontWeight "bold" -Name "TitleBar" -BackGround "Blue" -Foreground "White" -Form $Form -RoundedTop
$Img = GUI2-Add-Image -Form $Form -Information -Width 32 -Height 32

$Label2 = GUI2-Add-Label -Content "PowerShell and WPF Message Box PowerShell and WPF Message Box PowerShell and WPF Message Box PowerShell and WPF Message Box PowerShell and WPF Message Box " -FontSize "12" -FontWeight "Normal" -Name "MyLabel2" -Foreground "Black" -Form $Form -Multiline -MaxWidth 400 -TextAlignment "Center"
$Label3 = GUI2-Add-Label -Footer -Content "ss" -FontSize "12" -FontWeight "Normal" -Name "MyLabel3" -Foreground "Black" -Form $Form 

$Butt = GUI2-Add-Button -Content "OK" -Form $Form -CloseForm -Name "OKButton" -Center


#$Response = '' | Select-Object -Property Text, Result


[void]$Form.Dispatcher.InvokeAsync{$Form.ShowDialog()}.Wait()

#$window.DialogResult
	
